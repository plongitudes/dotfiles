# let's use tmux-256color.

# as of 2023/08/05, macOS's shipping ncurses is 5.7 and doesn't work consistently. you might need to:
# (assuming a Homebrew install, a homebrew install of zsh and tmux which depends on ncurses):
# > /opt/homebrew/Cellar/ncurses/6.4/bin/infocmp -x tmux-256color > ~/tmux-256color
# search for pattern 'pairs#0x10000' or 'pairs#65536'
# replace it with 'pairs#32767'
# then with `tic` from the older install of ncurses:
# > /usr/bin/tic -x -o $HOME/.local/share/terminfo tmux-256color.src
# and then modify your environment to look for this new term info -- probably want to add it to .zshrc
# > export TERMINFO_DIRS=$TERMINFO_DIRS:$HOME/.local/share/terminfo

###########################
### color compatibility ###
###########################

# autodetect 256 color support
# (remember that $TERM is overridden to `screen' here and isn't the "owner" terminal's val once inside tmux's proc)
if-shell 'test $(tput colors) -ge 256' \
    'set -g default-terminal "tmux-256color"' \
    'set-option -g default-terminal tmux'

################################
### configuration / settings ###
################################

# terminal overrides, because I'm smarter than ncurses
# truecolor! (in normal and nested sessions)
set -ga terminal-overrides ",xterm-256color:Tc,tmux-256color:Tc"
# italics!
set -ga terminal-overrides ',xterm*:sitm=\E[3m'
# cursor shape?
set -ga terminal-overrides ',tmux*:Ss=\E[%p1%d q:Se=\E[2 q'
# terminal features (fingers crossed)
set -as terminal-features ',xterm-256color:clipboard'

# allow clipboard munging from inside
set -s set-clipboard on
#set -g allow-passthrough on

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on

# vi mode keys
set-option -g status-keys vi
set-window-option -g mode-keys vi

# set window title from nvim
#set-window-option -g window-status-current-format "[#I #W#T]"
#set-window-option -g window-status-format "[#I #W#T]"

# history size
set-option -g history-limit 1000000000

# unfuck vim and the esc key
set -sg escape-time 0

# automatic window renaming
set-option -g status-interval 5
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

#####################
### key  mappings ###
#####################

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# new windows to the right instead of left
bind c new-window -a

# split panes using | and -
bind -n M-= split-window -h
bind -n M-- split-window -v
bind -n M-_ split-window -hf
bind -n M-+ split-window -hf
unbind '"'
unbind %

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf

# try to go into move mode without the prefix
bind -n M-/ copy-mode

#flipping the orientation of the current pane with the pane <arrow-way>-of
bind -n M-H move-pane -t '.{left-of}'
bind -n M-J move-pane -h -t '.{down-of}'
bind -n M-K move-pane -h -t '.{up-of}'
bind -n M-L move-pane -t '.{right-of}'

# move current pane into chosen window
bind-key m choose-window -F "#{window_index}: #{window_name}" "join-pane -h -t %%"
bind-key M choose-window -F "#{window_index}: #{window_name}" "join-pane -v -t %%"

# switch panes using Alt-hjkl without prefix
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# switch windows with alt-u|i
bind -n M-u select-window -p
bind -n M-i select-window -n

# Scroll by pgdn/pgup or number of lines (-N<n>)
#bind-key -T copy-mode-vi WheelDownPane send-keys -X page-down-and-cancel
#bind-key -T copy-mode-vi WheelUpPane send-keys -X page-up

bind -T copy-mode-vi WheelDownPane send -N3 -X scroll-down-and-cancel
bind -T copy-mode-vi WheelUpPane send -N3 -X scroll-up

# Don't overwrite scroll for tools that already know about it.
bind-key -n WheelDownPane if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" "send -M" "copy-mode -e"

# clear screen with ctrl-L
bind-key -n C-l send-keys -R Enter\; clear-history

# Ctrl-Space to zoom current pane
bind-key -n C-Space resize-pane -Z

# Make `y` copy the selected text, not exiting the copy mode. For copy-and-exit
# use ordinary `Enter`
set -g @yank_action 'copy-pipe'
# unbind -T copy-mode-vi MouseDragEnd1Pane
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe
# bind -T copy-mode-vi MouseDown1Pane send-keys -X clear-selection \; select-pane
bind -T copy-mode-vi MouseDown1Pane send-keys -X copy-pipe \; select-pane
bind -T copy-mode-vi y send-keys -X copy-pipe  # Only copy, no page-down-and-cancel

# Don't overwrite scroll for tools that already know about it.
bind-key -n WheelDownPane if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" "send -M" "copy-mode -e"

# resizing panes 15 lines at a time
#bind -n C-Left  resize-pane -L 15
#bind -n C-Right resize-pane -R 15
#bind -n C-Up    resize-pane -U 15
#bind -n C-Down  resize-pane -D 15

# statusline info about zoomed pane
setw -g window-status-current-format '#{?window_zoomed_flag,#[fg=yellow],}#F#I [#W] '

# switch between light and dark themes
bind-key M-q set -g @tmux-gruvbox 'light'
bind-key M-w set -g @tmux-gruvbox 'dark'

######################
### DESIGN CHANGES ###
######################

# loud or quiet?
#set -g visual-activity off
#set -g visual-bell off
#set -g visual-silence off
#setw -g monitor-activity off
set -g bell-action none

# modes
setw -g clock-mode-colour colour5
setw -g mode-style 'fg=colour1 bg=colour18 bold'

# panes
set -g pane-border-style 'bg=colour233 fg=colour234'
set -g pane-active-border-style 'bg=colour233 fg=colour101'

# Active pane bg
set -g window-active-style bg=colour234

# Inactive pane bg
set -g window-style bg=default
#set -g window-style bg=colour233

##############
# TPM config #
##############

# plugin manager, TPM
set -g @plugin 'tmux-plugins/tpm'
# sensible defaults
set -g @plugin 'tmux-plugins/tmux-sensible'
# display network speeds in status bar
set -g @plugin 'tmux-plugins/tmux-net-speed'
# push copied text to the system buffer
set -g @plugin 'tmux-plugins/tmux-yank'
# still the best colorscheme ever
set -g @plugin 'egel/tmux-gruvbox'
# reload tmux when tmux.conf changes
set -g @plugin 'b0o/tmux-autoreload'
# save tmux anvironment and reload
set -g @plugin 'tmux-plugins/tmux-resurrect'
# ensure resurrect is constantly saved
set -g @plugin 'tmux-plugins/tmux-continuum'

# gruvbox dark, obviously
set -g @tmux-gruvbox 'dark' # dark or light
# tmux autoreload and options. note that `entr` (https://github.com/eradman/entr) is a dependency.
set -g @tmux-autoreload-configs '~/.dotfiles/tmux.conf'
# don't be quiet with notifications
set -g @tmux-autoreload-quiet 0
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @continuum-restore 'on'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'


